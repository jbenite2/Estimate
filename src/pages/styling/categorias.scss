// 90 = 360/no of layers (4 in my case)
$hueStep: 90;
$delayStep: .115s;

html,
body {
	height: 100%;
}

.btnsDiv {
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	justify-content: center;
	margin: 0 auto;
	max-width: 50em;
	padding: 2em 0;
	width: 100%;
}

.btn {
	background: hsl(var(--hue), 98%, 80%);
	border: none;
	border-radius: 7px;
	cursor: pointer;
	color: black;
	font: 600 1.05rem/1 "Nunito", sans-serif;
	letter-spacing: .05em;
	overflow: hidden;
	padding: 1.15em 3.5em;
	min-height: 3.3em;
	position: relative;
	text-transform: lowercase;

	&--yellow {
		--hue: 46;
	}

	&--green {
		--hue: 163;
	}

	&--purple {
		--hue: 244;
	}

	&--red {
		--hue: 0;
	}

	&--blue {
		--hue: 210;
	}

	&:active,
	&:focus {
		outline: 3px solid hsl(calc(var(--hue) + #{$hueStep}), 98%, 80%);
	}

	&+& {
		margin-top: 2.5em;
	}

	&__txt {
		position: relative;
		z-index: 2;
	}

	&__bg {
		background: hsl(var(--hueBg), 98%, 80%);
		border-radius: 50%;
		display: block;
		height: 0;
		left: 50%;
		margin: -50% 0 0 -50%;
		padding-top: 100%;
		position: absolute;
		top: 50%;
		width: 100%;
		transform: scale(0);
		transform-origin: 50% 50%;
		transition: transform 0.175s cubic-bezier(0.5, 1, 0.89, 1);
		z-index: 1;

		@for $i from 1 through 4 {
			&:nth-of-type(#{$i}) {
				--hueBg: calc(var(--hue) - #{$i * $hueStep});
				transition-delay: $delayStep / 2 * (4 - $i);
			}
		}

		.btn:hover &,
		.btn:focus &,
		.btn:active & {
			transform: scale(1.5);
			transition: transform 0.35s cubic-bezier(0.11, 0, 0.5, 0);

			@for $i from 1 through 4 {
				&:nth-of-type(#{$i}) {
					transition-delay: $delayStep * $i;
				}
			}
		}
	}
}

.categories-container {
	max-width: 1200px;
	margin: 2rem auto;
	padding: 0 2rem;
	min-height: calc(100vh - 80px);
	display: flex;
	flex-direction: column;
	align-items: center;

	h1 {
		color: var(--primary-blue);
		font-size: 2.5rem;
		margin: 1rem 0 2rem 0;
		text-align: center;
		font-weight: 600;
	}
}

.categories-grid {
	display: flex;
	flex-direction: column;
	gap: 1.2rem;
	width: 100%;
	max-width: 500px;
	padding: 0 1rem;
}

.category-card {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	background: var(--white);
	border: 2px solid var(--light-gray);
	border-radius: 8px;
	padding: 1.3rem 2rem;
	transition: all 0.3s ease;
	cursor: pointer;
	text-decoration: none;
	color: var(--primary-blue);
	background-color: #181E95;
	color: white;
	text-transform: uppercase;
	letter-spacing: 0.5px;
	font-size: 1.2rem;
	font-weight: 500;

	&:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(24, 30, 149, 0.3);
		background-color: #1c2399;
	}

	.category-icon {
		font-size: 2.2rem;
		margin-right: 1.5rem;
		line-height: 1;
	}

	.category-name {
		font-size: 1.2rem;
		font-weight: 500;
		text-align: center;
		color: white;
	}
}

@media (max-width: 768px) {
	.categories-container {
		padding: 1rem;
		margin: 1rem auto;

		h1 {
			font-size: 2rem;
		}
	}

	.categories-grid {
		max-width: 400px;
	}

	.category-card {
		padding: 1.2rem 1.8rem;
		font-size: 1.1rem;

		.category-icon {
			font-size: 2rem;
		}
	}
}

@media (max-width: 480px) {
	.categories-container h1 {
		font-size: 1.8rem;
	}

	.categories-grid {
		max-width: 100%;
	}

	.category-card {
		padding: 1rem 1.5rem;
		font-size: 1rem;

		.category-icon {
			font-size: 1.8rem;
		}
	}
}

// Keep the fadeIn animation but adjust for vertical layout
.category-card {
	animation: fadeIn 0.5s ease forwards;

	@for $i from 1 through 7 {
		&:nth-child(#{$i}) {
			animation-delay: #{$i * 0.1}s;
		}
	}
}